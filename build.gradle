import java.util.concurrent.TimeUnit

apply plugin: 'java-library'

static String envOr(String key, String presentPrefix = "", Object or = "") {
    def env = System.getenv()
    if (env.containsKey(key))
        return presentPrefix + env.get(key)
    return or
}

ext {
    buildId = TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())
}
task tcBuildId {
    doLast {
        println "##teamcity[buildNumber '$buildId']"
    }
}
tasks.named('jar').configure { dependsOn tcBuildId }
group 'org.comroid'
version '0.1.0' + '.' + buildId

apply from: 'gradle/vars.gradle'

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.findByName('wrapper')?.configure {
    gradleVersion = '6.2'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

configurations {
    compileClasspath {
        resolutionStrategy.activateDependencyLocking()
    }
}

tasks.withType(Javadoc) {
    source = sourceSets.main.java

    options {
        encoding = 'UTF-8'
        /*
        links = [
                "https://docs.oracle.com/javase/8/docs/api/",
                "https://docs.oracle.com/javaee/7/api/"
        ]
        */
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava

    try {
        archiveClassifier.set 'sources'
    } catch (MissingPropertyException ignored) {
        classifier = "sources"
    }
}

task javadocJar(type: Jar) {
    from javadoc.destinationDir

    try {
        archiveClassifier.set 'javadoc'
    } catch (MissingPropertyException ignored) {
        classifier = "javadoc"
    }
}

compileJava.options.encoding = 'UTF-8'

repositories {
    mavenLocal()
    maven {
        url "https://maven.jetbrains.space/comroid/release"
        credentials.username "Anonymous.User"
        credentials.password "anonymous"
    }
    maven {
        url "https://maven.jetbrains.space/comroid/repo"
        credentials.username "Anonymous.User"
        credentials.password "anonymous"
    }
    jcenter()
    maven { url 'https://www.jitpack.io' }
}

dependencies {
    api 'org.jetbrains:annotations:21.+'

    // logging dependencies
    api 'org.apache.logging.log4j:log4j-api:2.17.0'
    testImplementation 'org.apache.logging.log4j:log4j-core:2.17.0'

    testImplementation 'junit:junit:4.13'
    testImplementation 'org.easymock:easymock:4.1'
    testImplementation 'org.codehaus.groovy:groovy:3.0.0-rc-2'
}

apply from: 'gradle/publishing.gradle'
